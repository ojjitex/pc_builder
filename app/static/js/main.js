document.addEventListener("DOMContentLoaded", () => {
    const wishlist = JSON.parse(localStorage.getItem("wishlist")) || [];

    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
    document.querySelectorAll(".wishlist-btn").forEach(button => {
        const productId = button.dataset.id;

        if (wishlist.includes(productId)) {
            button.classList.add("active");
            button.textContent = "‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º";
        }

        button.addEventListener("click", () => {
            if (wishlist.includes(productId)) {
                wishlist.splice(wishlist.indexOf(productId), 1);
                button.classList.remove("active");
                button.textContent = "‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ";
            } else {
                wishlist.push(productId);
                button.classList.add("active");
                button.textContent = "‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º";
            }

            localStorage.setItem("wishlist", JSON.stringify(wishlist));
        });
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Tooltips
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

    // 1. –õ–æ–≥–∏–∫–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
    const compareList = [];
    document.querySelectorAll(".compare-btn").forEach(button => {
        button.addEventListener("click", () => {
            const productId = button.dataset.id;
            if (!compareList.includes(productId)) {
                compareList.push(productId);
                alert(`–¢–æ–≤–∞—Ä —Å ID ${productId} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ.`);
            } else {
                alert("–≠—Ç–æ—Ç —Ç–æ–≤–∞—Ä —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ.");
            }
        });
    });

    // 2. –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    const progressBar = document.querySelector(".progress-bar");
    let progress = 0;

    function updateProgress(value) {
        progress += value;
        progressBar.style.width = `${progress}%`;
        progressBar.setAttribute("aria-valuenow", progress);
        progressBar.textContent = `${progress}%`;
    }

    // –ü—Ä–∏–º–µ—Ä: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    document.querySelectorAll(".card").forEach(card => {
        card.addEventListener("click", () => {
            updateProgress(25); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞ 25%
        });
    });

    // 3. –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
    const themeToggle = document.getElementById("theme-toggle");
    const currentTheme = localStorage.getItem("theme") || "dark";
    document.documentElement.setAttribute("data-theme", currentTheme);

    if (currentTheme === "dark") {
        themeToggle.textContent = "‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞";
    } else {
        themeToggle.textContent = "üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞";
    }

    themeToggle.addEventListener("click", () => {
        const newTheme = document.documentElement.getAttribute("data-theme") === "dark" ? "light" : "dark";
        document.documentElement.setAttribute("data-theme", newTheme);
        localStorage.setItem("theme", newTheme);

        if (newTheme === "dark") {
            themeToggle.textContent = "‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞";
        } else {
            themeToggle.textContent = "üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞";
        }
    });

    // 4. –õ–æ–≥–∏–∫–∞ –¥–ª—è —Å–ø–∏–Ω–Ω–µ—Ä–∞ –∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫
    const loadingSpinner = document.getElementById("loading-spinner");
    const productsContainer = document.getElementById("products-container");

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    loadingSpinner.style.display = "block";

    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ API)
    setTimeout(() => {
        loadingSpinner.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä
        const cards = productsContainer.querySelectorAll(".card");

        // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫
        cards.forEach((card, index) => {
            setTimeout(() => {
                card.classList.add("visible");
            }, index * 100); // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
        });
    }, 1000); // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 1 —Å–µ–∫—É–Ω–¥—É –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
});